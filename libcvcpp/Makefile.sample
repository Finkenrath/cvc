# ##########
top_srcdir=$(HOME)/code/cvc.kost
srcdir=$(top_srcdir)/libcvcpp
limedir=$(HOME)/local/lime_g++
lemondir=$(HOME)/local/lemon_g++
fftwdir=/usr

LEX=flex

# MPI
CXX=mpicxx.openmpi #MPI
CXXFLAGS=-g -ggdb -DF_ -O2 -mtune=core2 -DCVC -DOMPI_SKIP_MPICXX -pedantic -Wall -DMPI -DPARALLELTXY -DHAVE_LIBLEMON # MPI

# no MPI
#CXX=g++ # no MPI
#CXXFLAGS=-g -ggdb -DF_ -O2 -mtune=core2 -DCVC -DOMPI_SKIP_MPICXX -pedantic -Wall no MPI

DEP = ${CXX}
DEPFLAGS = -MM

INCLUDE = -I$(limedir)/include -I$(srcdir) -I$(top_srcdir) -I$(fftwdir)/include/
LIBS = -llime -llemon  -llapack -lblas -lfftw -lm /usr/lib/x86_64-linux-gnu/libgfortran.so.3
LDFLAGS = -L$(limedir)/lib/ -L$(lemondir)/lib/ -L/usr/lib/atlas-base/atlas -L$(fftwdir)/lib

LINK = $(CXX) -o $@ $(LDFLAGS)
COMPILE = $(CXX) $(INCLUDE) -o $@ $(CXXFLAGS)

# PROGRAMS treated with COMPILE and LINK
PROGRAMS = test_libcvcpp

# MODULES and CVC_MODULES treated with COMPILE
MODULES = flavour flavour_pairing spinor_field propagator smearing_bits correlator
CVC_MODULES = get_index io_utils propagator_io Q_phi mpi_init \
	cvc_geometry cvc_utils invert_Qtm ranlxd ranlxs \
	DML_crc32 dml read_input_parser deb_printf smearing_techniques \
	init_gauge_field gettime io gauge_io fuzz fuzz2 fatal_error

# ##########

all: $(PROGRAMS)

$(addsuffix .d,$(MODULES)): %.d: ${srcdir}/%.cpp Makefile
	@ $(DEP) ${DEPFLAGS} ${INCLUDE} $< > $@

$(addsuffix .d,$(PROGRAMS)): %.d: ${srcdir}/%.cpp Makefile
	@ $(DEP) ${DEPFLAGS} ${INCLUDE} $< > $@

$(addsuffix .d,$(CVC_MODULES)): %.d: ${top_srcdir}/%.c Makefile
	@ $(DEP) ${DEPFLAGS} ${INCLUDE} $< > $@

${top_srcdir}/read_input_parser.c: ${top_srcdir}/read_input_parser.l
	${LEX} -P cvc_ -i -t ${top_srcdir}/read_input_parser.l > ${top_srcdir}/read_input_parser.c

$(addsuffix .o,${CVC_MODULES}): %.o: ${top_srcdir}/%.c $(addprefix ${top_srcdir}/, $(addsuffix .h, ${HEADERS})) %.d Makefile
	${COMPILE} ${OPTARGS} -c $< 

$(addsuffix .o,${MODULES}): %.o: ${srcdir}/%.cpp $(addprefix ${srcdir}/, $(addsuffix .h, ${HEADERS})) %.d Makefile
	${COMPILE} ${OPTARGS} -c $<
	
$(addsuffix .o,${PROGRAMS}): %.o: ${srcdir}/%.cpp $(addprefix ${srcdir}/, $(addsuffix .h, ${HEADERS})) %.d Makefile
	${COMPILE} ${OPTARGS} -c $<	

${PROGRAMS}: %: $(addsuffix .o, ${PROGRAMS}) $(addsuffix .o,${MODULES}) $(addsuffix .o,${CVC_MODULES}) Makefile
	${LINK} $@.o $(addsuffix .o,${MODULES}) $(addsuffix .o,${CVC_MODULES}) $(LIBS)
	
clean:
	rm -v -f *~ *.o *.d $(PROGRAMS)
	
.PHONY: clean	
